// import React, { useState } from "react";
// import {
//   View,
//   Text,
//   ScrollView,
//   TouchableOpacity,
//   TextInput,
//   StyleSheet,
//   Dimensions,
// } from "react-native";
// import { useTranslation } from "react-i18next";
// import { useSelector } from "react-redux";
// import {
//   ClipboardList,
//   Clock,
//   Timer,
//   CheckCircle,
//   Search,
//   Phone,
//   FileText,
//   Play,
//   Eye,
//   DollarSign,
//   ShoppingBag,
// } from "lucide-react-native";

// const { width } = Dimensions.get("window");

// const OrdersScreen = () => {
//   const { t } = useTranslation();
//   const { currentLanguage } = useSelector((state) => state.language);
//   const isRTL = currentLanguage === "ar";
//   const [searchQuery, setSearchQuery] = useState("");
//   const [selectedStatus, setSelectedStatus] = useState("all");

//   const orders = [
//     {
//       id: "ORD001",
//       customerName: "John Smith",
//       customerPhone: "+1 (555) 123-4567",
//       items: [
//         { name: "Espresso", quantity: 1, price: 2.99 },
//         { name: "Croissant", quantity: 2, price: 4.98 },
//       ],
//       total: 7.97,
//       status: "pending",
//       time: "2024-01-20T10:30:00Z",
//       estimatedTime: "10:45 AM",
//       paymentMethod: "Credit Card",
//       specialInstructions: "Extra hot espresso",
//     },
//     {
//       id: "ORD002",
//       customerName: "Sarah Johnson",
//       customerPhone: "+1 (555) 234-5678",
//       items: [
//         { name: "Latte", quantity: 2, price: 7.98 },
//         { name: "Muffin", quantity: 1, price: 2.99 },
//       ],
//       total: 10.97,
//       status: "in-progress",
//       time: "2024-01-20T10:25:00Z",
//       estimatedTime: "10:40 AM",
//       paymentMethod: "Cash",
//       specialInstructions: "No foam on lattes",
//     },
//     {
//       id: "ORD003",
//       customerName: "Mike Brown",
//       customerPhone: "+1 (555) 345-6789",
//       items: [
//         { name: "Cappuccino", quantity: 1, price: 3.99 },
//         { name: "Sandwich", quantity: 1, price: 5.99 },
//       ],
//       total: 9.98,
//       status: "completed",
//       time: "2024-01-20T10:15:00Z",
//       estimatedTime: "10:30 AM",
//       paymentMethod: "Mobile Payment",
//       specialInstructions: "",
//     },
//     {
//       id: "ORD004",
//       customerName: "Emily Davis",
//       customerPhone: "+1 (555) 456-7890",
//       items: [
//         { name: "Iced Latte", quantity: 1, price: 4.49 },
//         { name: "Frappuccino", quantity: 1, price: 4.99 },
//         { name: "Cookie", quantity: 2, price: 3.98 },
//       ],
//       total: 13.46,
//       status: "pending",
//       time: "2024-01-20T10:35:00Z",
//       estimatedTime: "10:50 AM",
//       paymentMethod: "Credit Card",
//       specialInstructions: "Light ice in iced latte",
//     },
//   ];

//   const statuses = [
//     { key: "all", label: t("worker.allOrders"), icon: "ClipboardList" },
//     { key: "pending", label: t("worker.pending"), icon: "Clock" },
//     {
//       key: "in-progress",
//       label: t("worker.inProgress"),
//       icon: "Timer",
//     },
//     { key: "completed", label: t("worker.completed"), icon: "CheckCircle" },
//   ];

//   const getStatusColor = (status) => {
//     switch (status) {
//       case "pending":
//         return { backgroundColor: "#fef3c7", textColor: "#92400e" };
//       case "in-progress":
//         return { backgroundColor: "#dbeafe", textColor: "#1e3a8a" };
//       case "completed":
//         return { backgroundColor: "#bbf7d0", textColor: "#166534" };
//       default:
//         return { backgroundColor: "#e5e7eb", textColor: "#374151" };
//     }
//   };

//   const getStatusText = (status) => {
//     switch (status) {
//       case "pending":
//         return t("worker.statusPending");
//       case "in-progress":
//         return t("worker.statusInProgress");
//       case "completed":
//         return t("worker.statusCompleted");
//       default:
//         return status;
//     }
//   };

//   const getTranslatedPaymentMethod = (method) => {
//     const translations = {
//       "Credit Card": t("worker.creditCard"),
//       Cash: t("worker.cash"),
//       "Mobile Payment": t("worker.mobilePayment"),
//     };
//     return translations[method] || method;
//   };

//   const filteredOrders = orders.filter(
//     (order) =>
//       (selectedStatus === "all" || order.status === selectedStatus) &&
//       (order.customerName.toLowerCase().includes(searchQuery.toLowerCase()) ||
//         order.id.toLowerCase().includes(searchQuery.toLowerCase()))
//   );

//   const formatTime = (timestamp) => {
//     return new Date(timestamp).toLocaleTimeString([], {
//       hour: "2-digit",
//       minute: "2-digit",
//     });
//   };

//   const getOrderCount = (status) => {
//     if (status === "all") return orders.length;
//     return orders.filter((order) => order.status === status).length;
//   };

//   const getTotalRevenue = () => {
//     return orders.reduce((total, order) => total + order.total, 0);
//   };

//   const renderIcon = (iconName, size = 24, color = "#4e342e") => {
//     switch (iconName) {
//       case "ClipboardList":
//         return <ClipboardList size={size} color={color} />;
//       case "Clock":
//         return <Clock size={size} color={color} />;
//       case "Timer":
//         return <Timer size={size} color={color} />;
//       case "CheckCircle":
//         return <CheckCircle size={size} color={color} />;
//       case "Search":
//         return <Search size={size} color={color} />;
//       case "Phone":
//         return <Phone size={size} color={color} />;
//       case "FileText":
//         return <FileText size={size} color={color} />;
//       case "Play":
//         return <Play size={size} color={color} />;
//       case "Eye":
//         return <Eye size={size} color={color} />;
//       case "DollarSign":
//         return <DollarSign size={size} color={color} />;
//       case "ShoppingBag":
//         return <ShoppingBag size={size} color={color} />;
//       default:
//         return null;
//     }
//   };

//   const styles = StyleSheet.create({
//     container: {
//       flex: 1,
//       backgroundColor: "#f7f3ef",
//     },
//     header: {
//       paddingTop: 48,
//       paddingBottom: 28,
//       paddingHorizontal: 20,
//       backgroundColor: "#8d6e63",
//       borderBottomLeftRadius: 35,
//       borderBottomRightRadius: 35,
//       marginBottom: 24,
//       elevation: 12,
//       shadowColor: "#000",
//       shadowOffset: { width: 0, height: 6 },
//       shadowOpacity: 0.15,
//       shadowRadius: 12,
//     },
//     headerTitle: {
//       fontSize: 32,
//       fontWeight: "800",
//       color: "#fff",
//       marginBottom: 8,
//       textAlign: isRTL ? "right" : "left",
//       letterSpacing: -0.5,
//     },
//     headerSubtitle: {
//       color: "rgba(255, 255, 255, 0.9)",
//       fontSize: 16,
//       textAlign: isRTL ? "right" : "left",
//       fontWeight: "500",
//     },
//     scrollContainer: {
//       flex: 1,
//       paddingHorizontal: 20,
//     },
//     statsContainer: {
//       flexDirection: isRTL ? "row-reverse" : "row",
//       justifyContent: "space-between",
//       marginBottom: 28,
//     },
//     card: {
//       flex: 1,
//       backgroundColor: "#fffaf5",
//       borderRadius: 24,
//       padding: 20,
//       marginHorizontal: 6,
//       elevation: 8,
//       borderWidth: 1,
//       borderColor: "#e5d4c0",
//       shadowColor: "#000",
//       shadowOffset: { width: 0, height: 4 },
//       shadowOpacity: 0.1,
//       shadowRadius: 8,
//     },
//     cardValue: {
//       fontSize: 26,
//       fontWeight: "800",
//       color: "#4e342e",
//       textAlign: isRTL ? "right" : "left",
//     },
//     cardLabel: {
//       fontSize: 14,
//       color: "#6b4f42",
//       marginTop: 6,
//       textAlign: isRTL ? "right" : "left",
//       fontWeight: "600",
//     },
//     section: {
//       marginBottom: 28,
//     },
//     sectionTitle: {
//       fontSize: 22,
//       fontWeight: "700",
//       color: "#4e342e",
//       marginBottom: 16,
//       textAlign: isRTL ? "right" : "left",
//       letterSpacing: -0.3,
//     },
//     inputContainer: {
//       backgroundColor: "#fffaf5",
//       borderRadius: 25,
//       paddingHorizontal: 20,
//       paddingVertical: 18,
//       elevation: 8,
//       borderWidth: 1,
//       borderColor: "#e5d4c0",
//       flexDirection: isRTL ? "row-reverse" : "row",
//       alignItems: "center",
//       shadowColor: "#000",
//       shadowOffset: { width: 0, height: 4 },
//       shadowOpacity: 0.1,
//       shadowRadius: 8,
//     },
//     textInput: {
//       fontSize: 16,
//       color: "#4e342e",
//       flex: 1,
//       textAlign: isRTL ? "right" : "left",
//       marginRight: isRTL ? 0 : 12,
//       marginLeft: isRTL ? 12 : 0,
//       fontWeight: "500",
//     },
//     filterRow: {
//       flexDirection: isRTL ? "row-reverse" : "row",
//       paddingHorizontal: 4,
//     },
//     statusButton: {
//       marginRight: isRTL ? 0 : 12,
//       marginLeft: isRTL ? 12 : 0,
//       paddingVertical: 16,
//       paddingHorizontal: 20,
//       borderRadius: 28,
//       elevation: 6,
//       backgroundColor: "#fffaf5",
//       borderWidth: 1,
//       borderColor: "#e5d4c0",
//       alignItems: "center",
//       justifyContent: "center",
//       minWidth: 110,
//       shadowColor: "#000",
//       shadowOffset: { width: 0, height: 3 },
//       shadowOpacity: 0.12,
//       shadowRadius: 6,
//     },
//     statusButtonSelected: {
//       backgroundColor: "#6d4c41",
//       borderColor: "#6d4c41",
//       elevation: 8,
//       shadowOpacity: 0.2,
//     },
//     statusIcon: {
//       marginBottom: 6,
//     },
//     statusLabel: {
//       fontSize: 13,
//       fontWeight: "700",
//       color: "#4e342e",
//       textAlign: "center",
//       marginBottom: 4,
//       letterSpacing: 0.2,
//     },
//     statusLabelSelected: {
//       color: "#fff",
//     },
//     statusCount: {
//       fontSize: 11,
//       color: "#6b4f42",
//       fontWeight: "600",
//       backgroundColor: "rgba(255, 255, 255, 0.2)",
//       paddingHorizontal: 8,
//       paddingVertical: 2,
//       borderRadius: 10,
//     },
//     statusCountSelected: {
//       color: "#fff",
//       backgroundColor: "rgba(255, 255, 255, 0.3)",
//     },
//     ordersContainer: {
//       gap: 20,
//     },
//     orderCard: {
//       backgroundColor: "#fffaf5",
//       borderRadius: 24,
//       padding: 24,
//       elevation: 8,
//       borderWidth: 1,
//       borderColor: "#e5d4c0",
//       shadowColor: "#000",
//       shadowOffset: { width: 0, height: 4 },
//       shadowOpacity: 0.08,
//       shadowRadius: 12,
//     },
//     orderHeader: {
//       flexDirection: isRTL ? "row-reverse" : "row",
//       justifyContent: "space-between",
//       marginBottom: 16,
//       alignItems: "flex-start",
//     },
//     orderCustomer: {
//       fontSize: 20,
//       fontWeight: "800",
//       color: "#4e342e",
//       textAlign: isRTL ? "right" : "left",
//       letterSpacing: -0.3,
//     },
//     orderId: {
//       fontSize: 16,
//       color: "#6b4f42",
//       marginBottom: 6,
//       textAlign: isRTL ? "right" : "left",
//       fontWeight: "600",
//     },
//     orderPhone: {
//       fontSize: 14,
//       color: "#6b4f42",
//       textAlign: isRTL ? "right" : "left",
//       flexDirection: isRTL ? "row-reverse" : "row",
//       alignItems: "center",
//     },
//     statusBadge: {
//       paddingHorizontal: 14,
//       paddingVertical: 8,
//       borderRadius: 22,
//       alignSelf: "flex-start",
//       shadowColor: "#000",
//       shadowOffset: { width: 0, height: 3 },
//       shadowOpacity: 0.12,
//       shadowRadius: 6,
//       elevation: 4,
//     },
//     statusBadgeText: {
//       fontWeight: "700",
//       fontSize: 12,
//       textTransform: "uppercase",
//       letterSpacing: 0.5,
//     },
//     orderItemsContainer: {
//       backgroundColor: "#f7f3ef",
//       borderRadius: 20,
//       padding: 20,
//       marginBottom: 16,
//       borderWidth: 1,
//       borderColor: "#e5d4c0",
//     },
//     orderItemsTitle: {
//       fontSize: 18,
//       fontWeight: "700",
//       color: "#4e342e",
//       marginBottom: 12,
//       textAlign: isRTL ? "right" : "left",
//       letterSpacing: -0.3,
//     },
//     orderItemRow: {
//       flexDirection: isRTL ? "row-reverse" : "row",
//       justifyContent: "space-between",
//       marginBottom: 8,
//       alignItems: "center",
//     },
//     orderItemName: {
//       fontSize: 15,
//       color: "#4e342e",
//       fontWeight: "600",
//       textAlign: isRTL ? "right" : "left",
//     },
//     orderItemPrice: {
//       fontSize: 15,
//       color: "#6b4f42",
//       fontWeight: "700",
//       textAlign: isRTL ? "right" : "left",
//     },
//     orderDetailsContainer: {
//       backgroundColor: "#e7d7c9",
//       borderRadius: 20,
//       padding: 20,
//       marginBottom: 16,
//       borderWidth: 1,
//       borderColor: "#e5d4c0",
//     },
//     detailRow: {
//       flexDirection: isRTL ? "row-reverse" : "row",
//       justifyContent: "space-between",
//       marginBottom: 12,
//       alignItems: "center",
//     },
//     detailLabel: {
//       fontSize: 14,
//       color: "#6b4f42",
//       textAlign: isRTL ? "right" : "left",
//       fontWeight: "600",
//     },
//     detailValue: {
//       fontSize: 14,
//       color: "#4e342e",
//       fontWeight: "700",
//       textAlign: isRTL ? "right" : "left",
//     },
//     totalLabel: {
//       fontSize: 16,
//       fontWeight: "800",
//       color: "#4e342e",
//       textAlign: isRTL ? "right" : "left",
//     },
//     totalValue: {
//       fontSize: 20,
//       fontWeight: "800",
//       color: "#6d4c41",
//       textAlign: isRTL ? "right" : "left",
//     },
//     instructionsContainer: {
//       backgroundColor: "#fff4e5",
//       borderRadius: 20,
//       padding: 20,
//       marginBottom: 16,
//       borderWidth: 1,
//       borderColor: "#e5d4c0",
//     },
//     instructionsTitle: {
//       fontSize: 16,
//       fontWeight: "700",
//       color: "#4e342e",
//       marginBottom: 8,
//       textAlign: isRTL ? "right" : "left",
//       flexDirection: isRTL ? "row-reverse" : "row",
//       alignItems: "center",
//     },
//     instructionsText: {
//       fontSize: 15,
//       color: "#6b4f42",
//       textAlign: isRTL ? "right" : "left",
//       lineHeight: 22,
//       fontWeight: "500",
//     },
//     actionsRow: {
//       flexDirection: isRTL ? "row-reverse" : "row",
//       marginTop: 12,
//       gap: 16,
//     },
//     startButton: {
//       flex: 1,
//       backgroundColor: "#6d4c41",
//       padding: 16,
//       borderRadius: 20,
//       alignItems: "center",
//       flexDirection: isRTL ? "row-reverse" : "row",
//       justifyContent: "center",
//       elevation: 6,
//       shadowColor: "#000",
//       shadowOffset: { width: 0, height: 4 },
//       shadowOpacity: 0.2,
//       shadowRadius: 6,
//     },
//     completeButton: {
//       flex: 1,
//       backgroundColor: "#8d6e63",
//       padding: 16,
//       borderRadius: 20,
//       alignItems: "center",
//       flexDirection: isRTL ? "row-reverse" : "row",
//       justifyContent: "center",
//       elevation: 6,
//       shadowColor: "#000",
//       shadowOffset: { width: 0, height: 4 },
//       shadowOpacity: 0.2,
//       shadowRadius: 6,
//     },
//     detailsButton: {
//       backgroundColor: "#d7bfa9",
//       paddingHorizontal: 24,
//       paddingVertical: 16,
//       borderRadius: 20,
//       alignItems: "center",
//       flexDirection: isRTL ? "row-reverse" : "row",
//       justifyContent: "center",
//       elevation: 4,
//       shadowColor: "#000",
//       shadowOffset: { width: 0, height: 2 },
//       shadowOpacity: 0.1,
//       shadowRadius: 4,
//       borderWidth: 1,
//       borderColor: "#e5d4c0",
//     },
//     actionButtonText: {
//       color: "#fff",
//       fontWeight: "700",
//       marginRight: isRTL ? 0 : 8,
//       marginLeft: isRTL ? 8 : 0,
//       fontSize: 15,
//       letterSpacing: 0.3,
//     },
//     detailsButtonText: {
//       color: "#4e342e",
//       fontWeight: "700",
//       marginRight: isRTL ? 0 : 8,
//       marginLeft: isRTL ? 8 : 0,
//       fontSize: 15,
//       letterSpacing: 0.3,
//     },
//   });

//   return (
//     <View style={styles.container}>
//       <View style={styles.header}>
//         <Text style={styles.headerTitle}>{t("worker.orders")}</Text>
//         <Text style={styles.headerSubtitle}>
//           {t("worker.manageAndTrackOrders")}
//         </Text>
//       </View>

//       <ScrollView
//         style={styles.scrollContainer}
//         showsVerticalScrollIndicator={false}
//       >
//         <View style={styles.statsContainer}>
//           <View style={styles.card}>
//             <Text style={styles.cardValue}>{orders.length}</Text>
//             <Text style={styles.cardLabel}>{t("worker.totalOrders")}</Text>
//           </View>
//           <View style={styles.card}>
//             <Text style={[styles.cardValue, { color: "#6d4c41" }]}>
//               ${getTotalRevenue().toFixed(2)}
//             </Text>
//             <Text style={styles.cardLabel}>{t("worker.totalRevenue")}</Text>
//           </View>
//         </View>

//         <View style={styles.section}>
//           <View style={styles.inputContainer}>
//             {renderIcon("Search", 20, "#6b4f42")}
//             <TextInput
//               style={styles.textInput}
//               placeholder={t("worker.searchOrdersByCustomer")}
//               placeholderTextColor="#9CA3AF"
//               value={searchQuery}
//               onChangeText={setSearchQuery}
//             />
//           </View>
//         </View>

//         <View style={styles.section}>
//           <Text style={styles.sectionTitle}>{t("worker.filterByStatus")}</Text>
//           <ScrollView
//             horizontal
//             showsHorizontalScrollIndicator={false}
//             inverted={isRTL}
//             contentContainerStyle={
//               isRTL ? { flexDirection: "row-reverse" } : {}
//             }
//           >
//             <View style={styles.filterRow}>
//               {statuses.map((status) => (
//                 <TouchableOpacity
//                   key={status.key}
//                   onPress={() => setSelectedStatus(status.key)}
//                   style={[
//                     styles.statusButton,
//                     selectedStatus === status.key &&
//                       styles.statusButtonSelected,
//                   ]}
//                 >
//                   <View style={styles.statusIcon}>
//                     {renderIcon(
//                       status.icon,
//                       20,
//                       selectedStatus === status.key ? "#fff" : "#4e342e"
//                     )}
//                   </View>
//                   <Text
//                     style={[
//                       styles.statusLabel,
//                       selectedStatus === status.key &&
//                         styles.statusLabelSelected,
//                     ]}
//                   >
//                     {status.label}
//                   </Text>
//                   <Text
//                     style={[
//                       styles.statusCount,
//                       selectedStatus === status.key &&
//                         styles.statusCountSelected,
//                     ]}
//                   >
//                     {getOrderCount(status.key)}
//                   </Text>
//                 </TouchableOpacity>
//               ))}
//             </View>
//           </ScrollView>
//         </View>

//         <View style={styles.section}>
//           <Text style={styles.sectionTitle}>
//             {t("worker.orders")} ({filteredOrders.length})
//           </Text>
//           <View style={styles.ordersContainer}>
//             {filteredOrders.map((order) => {
//               const statusStyle = getStatusColor(order.status);

//               return (
//                 <View key={order.id} style={styles.orderCard}>
//                   <View style={styles.orderHeader}>
//                     <View style={{ flex: 1 }}>
//                       <Text style={styles.orderCustomer}>
//                         {order.customerName}
//                       </Text>
//                       <Text style={styles.orderId}>
//                         {t("worker.orderId")}: {order.id}
//                       </Text>
//                       <View
//                         style={{
//                           flexDirection: isRTL ? "row-reverse" : "row",
//                           alignItems: "center",
//                         }}
//                       >
//                         {renderIcon("Phone", 14, "#6b4f42")}
//                         <Text style={styles.orderPhone}>
//                           {order.customerPhone}
//                         </Text>
//                       </View>
//                     </View>
//                     <View
//                       style={[
//                         styles.statusBadge,
//                         { backgroundColor: statusStyle.backgroundColor },
//                       ]}
//                     >
//                       <Text
//                         style={[
//                           styles.statusBadgeText,
//                           { color: statusStyle.textColor },
//                         ]}
//                       >
//                         {getStatusText(order.status)}
//                       </Text>
//                     </View>
//                   </View>

//                   <View style={styles.orderItemsContainer}>
//                     <View
//                       style={{
//                         flexDirection: isRTL ? "row-reverse" : "row",
//                         alignItems: "center",
//                         marginBottom: 12,
//                       }}
//                     >
//                       {renderIcon("ShoppingBag", 18, "#4e342e")}
//                       <Text style={styles.orderItemsTitle}>
//                         {t("worker.orderItemsTitle")}
//                       </Text>
//                     </View>
//                     {order.items.map((item, idx) => (
//                       <View key={idx} style={styles.orderItemRow}>
//                         <Text style={styles.orderItemName}>
//                           {item.quantity}x {item.name}
//                         </Text>
//                         <Text style={styles.orderItemPrice}>
//                           ${item.price.toFixed(2)}
//                         </Text>
//                       </View>
//                     ))}
//                   </View>

//                   <View style={styles.orderDetailsContainer}>
//                     <View style={styles.detailRow}>
//                       <Text style={styles.detailLabel}>
//                         {t("worker.orderTime")}
//                       </Text>
//                       <Text style={styles.detailValue}>
//                         {formatTime(order.time)}
//                       </Text>
//                     </View>
//                     <View style={styles.detailRow}>
//                       <Text style={styles.detailLabel}>
//                         {t("worker.estimatedReady")}
//                       </Text>
//                       <Text style={[styles.detailValue, { color: "#6d4c41" }]}>
//                         {order.estimatedTime}
//                       </Text>
//                     </View>
//                     <View style={styles.detailRow}>
//                       <Text style={styles.detailLabel}>
//                         {t("worker.payment")}
//                       </Text>
//                       <Text style={styles.detailValue}>
//                         {getTranslatedPaymentMethod(order.paymentMethod)}
//                       </Text>
//                     </View>
//                     <View style={styles.detailRow}>
//                       <Text style={styles.totalLabel}>
//                         {t("common.total")}:
//                       </Text>
//                       <Text style={styles.totalValue}>
//                         ${order.total.toFixed(2)}
//                       </Text>
//                     </View>
//                   </View>

//                   {order.specialInstructions ? (
//                     <View style={styles.instructionsContainer}>
//                       <View
//                         style={{
//                           flexDirection: isRTL ? "row-reverse" : "row",
//                           alignItems: "center",
//                           marginBottom: 8,
//                         }}
//                       >
//                         {renderIcon("FileText", 16, "#4e342e")}
//                         <Text style={styles.instructionsTitle}>
//                           {t("worker.specialInstructions")}:
//                         </Text>
//                       </View>
//                       <Text style={styles.instructionsText}>
//                         {order.specialInstructions}
//                       </Text>
//                     </View>
//                   ) : null}

//                   {order.status !== "completed" && (
//                     <View style={styles.actionsRow}>
//                       {order.status === "pending" && (
//                         <TouchableOpacity style={styles.startButton}>
//                           {renderIcon("Play", 16, "#fff")}
//                           <Text style={styles.actionButtonText}>
//                             {t("worker.startOrderButton")}
//                           </Text>
//                         </TouchableOpacity>
//                       )}
//                       {order.status === "in-progress" && (
//                         <TouchableOpacity style={styles.completeButton}>
//                           {renderIcon("CheckCircle", 16, "#fff")}
//                           <Text style={styles.actionButtonText}>
//                             {t("worker.completeOrderButton")}
//                           </Text>
//                         </TouchableOpacity>
//                       )}
//                       <TouchableOpacity style={styles.detailsButton}>
//                         {renderIcon("Eye", 16, "#4e342e")}
//                         <Text style={styles.detailsButtonText}>
//                           {t("worker.detailsButton")}
//                         </Text>
//                       </TouchableOpacity>
//                     </View>
//                   )}
//                 </View>
//               );
//             })}
//           </View>
//         </View>
//       </ScrollView>
//     </View>
//   );
// };

// export default OrdersScreen;


____________________________________________________________________________________________________


// import React, { useState, useEffect } from "react";
// import {
//   View,
//   Text,
//   ScrollView,
//   TouchableOpacity,
//   TextInput,
//   StyleSheet,
//   Dimensions,
//   RefreshControl,
//   Alert,
// } from "react-native";
// import { useTranslation } from "react-i18next";
// import { useSelector, useDispatch } from "react-redux";
// import { useNavigation } from "@react-navigation/native";
// import * as Notifications from "expo-notifications";
// import {
//   ClipboardList,
//   Clock,
//   Timer,
//   CheckCircle,
//   Search,
//   Phone,
//   FileText,
//   Play,
//   Eye,
//   DollarSign,
//   ShoppingBag,
// } from "lucide-react-native";

// const { width } = Dimensions.get("window");

// // Mock data as fallback
// const mockOrders = [
//   {
//     id: "ORD001",
//     customerName: "John Smith",
//     customerPhone: "+1 (555) 123-4567",
//     items: [
//       {
//         name: "Espresso",
//         quantity: 1,
//         price: 2.99,
//         description: "Dark roast espresso",
//       },
//       {
//         name: "Croissant",
//         quantity: 2,
//         price: 4.98,
//         description: "Freshly baked croissant",
//       },
//     ],
//     total: 7.97,
//     status: "pending",
//     time: "2025-07-17T10:30:00Z",
//     estimatedTime: "10:45 AM",
//     paymentMethod: "Credit Card",
//     specialInstructions: "Extra hot espresso",
//   },
//   {
//     id: "ORD002",
//     customerName: "Sarah Johnson",
//     customerPhone: "+1 (555) 234-5678",
//     items: [
//       {
//         name: "Latte",
//         quantity: 2,
//         price: 7.98,
//         description: "Creamy latte with whole milk",
//       },
//       {
//         name: "Muffin",
//         quantity: 1,
//         price: 2.99,
//         description: "Blueberry muffin",
//       },
//     ],
//     total: 10.97,
//     status: "in-progress",
//     time: "2025-07-17T10:25:00Z",
//     estimatedTime: "10:40 AM",
//     paymentMethod: "Cash",
//     specialInstructions: "No foam on lattes",
//   },
//   {
//     id: "ORD003",
//     customerName: "Mike Brown",
//     customerPhone: "+1 (555) 345-6789",
//     items: [
//       {
//         name: "Cappuccino",
//         quantity: 1,
//         price: 3.99,
//         description: "Classic cappuccino",
//       },
//       {
//         name: "Sandwich",
//         quantity: 1,
//         price: 5.99,
//         description: "Ham and cheese sandwich",
//       },
//     ],
//     total: 9.98,
//     status: "completed",
//     time: "2025-07-17T10:15:00Z",
//     estimatedTime: "10:30 AM",
//     paymentMethod: "Mobile Payment",
//     specialInstructions: "",
//   },
//   {
//     id: "ORD004",
//     customerName: "Emily Davis",
//     customerPhone: "+1 (555) 456-7890",
//     items: [
//       {
//         name: "Iced Latte",
//         quantity: 1,
//         price: 4.49,
//         description: "Chilled latte with ice",
//       },
//       {
//         name: "Frappuccino",
//         quantity: 1,
//         price: 4.99,
//         description: "Blended coffee drink",
//       },
//       {
//         name: "Cookie",
//         quantity: 2,
//         price: 3.98,
//         description: "Chocolate chip cookie",
//       },
//     ],
//     total: 13.46,
//     status: "pending",
//     time: "2025-07-17T10:35:00Z",
//     estimatedTime: "10:50 AM",
//     paymentMethod: "Credit Card",
//     borederWidth: 1,
//     specialInstructions: "Light ice in iced latte",
//   },
// ];

// const OrdersScreen = () => {
//   const { t } = useTranslation();
//   const { currentLanguage } = useSelector((state) => state.language);
//   const theme = useSelector((state) => state.theme.mode);
//   const isDark = theme === "dark";
//   const isRTL = currentLanguage === "ar";
//   const dispatch = useDispatch();
//   const navigation = useNavigation();
//   const [orders, setOrders] = useState(mockOrders);
//   const [loading, setLoading] = useState(false);
//   const [error, setError] = useState(null);
//   const [searchQuery, setSearchQuery] = useState("");
//   const [selectedStatus, setSelectedStatus] = useState("all");
//   const [selectedPaymentMethod, setSelectedPaymentMethod] = useState("all");
//   const [sort, setSort] = useState("newest");
//   const [filterExpanded, setFilterExpanded] = useState(false);
//   const toggleFilter = () => setFilterExpanded(!filterExpanded);
//   const [expandedOrderId, setExpandedOrderId] = useState(null);

//   const statuses = [
//     { key: "all", label: t("worker.allOrders"), icon: "ClipboardList" },
//     { key: "pending", label: t("worker.pending"), icon: "Clock" },
//     { key: "in-progress", label: t("worker.inProgress"), icon: "Timer" },
//     { key: "completed", label: t("worker.completed"), icon: "CheckCircle" },
//   ];

//   const paymentMethods = [
//     { key: "all", label: t("worker.allPayments") },
//     { key: "Credit Card", label: t("worker.creditCard") },
//     { key: "Cash", label: t("worker.cash") },
//     { key: "Mobile Payment", label: t("worker.mobilePayment") },
//   ];

//   const fetchOrders = async () => {
//   try {
//     setLoading(true);
//     setError(null);
    
//     // Assuming the token is stored in a variable or retrieved from somewhere
//     const token = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vYXBpLWNvZmZlZS5tLXplZGFuLmNvbS9hcGkvYWRtaW4vYXV0aC9sb2dpbiIsImlhdCI6MTc1Mjg1NjcyNCwiZXhwIjoxNzUyODYwMzI0LCJuYmYiOjE3NTI4NTY3MjQsImp0aSI6Imo2cG1ieE56YUtzcmNrenciLCJzdWIiOiIxNSIsInBydiI6IjIzYmQ1Yzg5NDlmNjAwYWRiMzllNzAxYzQwMDg3MmRiN2E1OTc2ZjcifQ.y4EQiD5Wvn5bQzc29nS1IziFnTNC02Z-e6DmGLx3mlw"; // Replace with actual token retrieval logic (e.g., from localStorage, context, or state)

//     const response = await fetch("http://api-coffee.m-zedan.com/api/admin/orders", {
//       headers: {
//         Authorization: `Bearer ${token}`, // Include the token in the Authorization header
//         "Content-Type": "application/json", // Optional: include if API requires it
//       },
//     });

//     if (!response.ok) throw new Error("Failed to fetch orders");
//     const data = await response.json();
//     console.log(data);
//     setOrders(data);
//   } catch (err) {
//     console.error("Error fetching orders:", err);
//     setError(t("common.errorFetchingData"));
//     setOrders(mockOrders); // Fallback to mock data
//   } finally {
//     setLoading(false);
//   }
// };

//   useEffect(() => {
//     fetchOrders();
//   }, []);

//   // const startOrder = async (orderId) => {
//   //   try {
//   //     const response = await fetch(
//   //       `https://api.example.com/orders/${orderId}/start`,
//   //       {
//   //         method: "PATCH",
//   //         headers: { "Content-Type": "application/json" },
//   //         body: JSON.stringify({ status: "in-progress" }),
//   //       }
//   //     );
//   //     if (!response.ok) throw new Error("Failed to start order");
//   //     setOrders(
//   //       orders.map((order) =>
//   //         order.id === orderId ? { ...order, status: "in-progress" } : order
//   //       )
//   //     );
//   //     await Notifications.scheduleNotificationAsync({
//   //       content: {
//   //         title: t("worker.orderStarted"),
//   //         body: `${t("worker.order")} ${orderId} ${t("worker.isNowInProgress")}`,
//   //       },
//   //       trigger: null,
//   //     });
//   //   } catch (error) {
//   //     console.error("Error starting order:", error);
//   //     Alert.alert(t("common.error"), t("common.errorStartingOrder"));
//   //   }
//   // };

//   const startOrder = (orderId) => {
//     setOrders((prev) =>
//       prev.map((order) =>
//         order.id === orderId ? { ...order, status: "in-progress" } : order
//       )
//     );
//   };

//   // const completeOrder = async (orderId) => {
//   //   try {
//   //     const response = await fetch(
//   //       `https://api.example.com/orders/${orderId}/complete`,
//   //       {
//   //         method: "PATCH",
//   //         headers: { "Content-Type": "application/json" },
//   //         body: JSON.stringify({ status: "completed" }),
//   //       }
//   //     );
//   //     if (!response.ok) throw new Error("Failed to complete order");
//   //     setOrders(
//   //       orders.map((order) =>
//   //         order.id === orderId ? { ...order, status: "completed" } : order
//   //       )
//   //     );
//   //     await Notifications.scheduleNotificationAsync({
//   //       content: {
//   //         title: t("worker.orderCompleted"),
//   //         body: `${t("worker.order")} ${orderId} ${t("worker.isNowCompleted")}`,
//   //       },
//   //       trigger: null,
//   //     });
//   //   } catch (error) {
//   //     console.error("Error completing order:", error);
//   //     Alert.alert(t("common.error"), t("common.errorCompletingOrder"));
//   //   }
//   // };

//   const completeOrder = (orderId) => {
//     setOrders((prev) =>
//       prev.map((order) =>
//         order.id === orderId ? { ...order, status: "completed" } : order
//       )
//     );
//   };

//   const viewDetails = (order) => {
//     navigation.navigate("OrderDetailsScreen", { order });
//   };

//   const viewProductDetails = (item) => {
//     Alert.alert(item.name, item.description || t("worker.noDescription"));
//   };

//   const getStatusColor = (status) => {
//     switch (status) {
//       case "pending":
//         return { backgroundColor: "#fef3c7", textColor: "#92400e" };
//       case "in-progress":
//         return { backgroundColor: "#dbeafe", textColor: "#1e3a8a" };
//       case "completed":
//         return { backgroundColor: "#bbf7d0", textColor: "#166534" };
//       default:
//         return {
//           backgroundColor: isDark ? "#2d2d2d" : "#e5e7eb",
//           textColor: isDark ? "#ffffff" : "#374151",
//         };
//     }
//   };

//   const getStatusText = (status) => {
//     switch (status) {
//       case "pending":
//         return t("worker.statusPending");
//       case "in-progress":
//         return t("worker.statusInProgress");
//       case "completed":
//         return t("worker.statusCompleted");
//       default:
//         return status;
//     }
//   };

//   const getTranslatedPaymentMethod = (method) => {
//     const translations = {
//       "Credit Card": t("worker.creditCard"),
//       Cash: t("worker.cash"),
//       "Mobile Payment": t("worker.mobilePayment"),
//     };
//     return translations[method] || method;
//   };

//   const getRemainingTime = (estimatedTime) => {
//     const now = new Date();
//     const estimated = new Date(`2025-07-17 ${estimatedTime}`);
//     const diff = Math.max(0, (estimated - now) / 1000 / 60);
//     return diff > 0
//       ? `${Math.floor(diff)} ${t("common.minutes")}`
//       : t("common.ready");
//   };

//   const filteredOrders = orders.filter(
//     (order) =>
//       (selectedStatus === "all" || order.status === selectedStatus) &&
//       (selectedPaymentMethod === "all" ||
//         order.paymentMethod === selectedPaymentMethod) &&
//       (order.customerName.toLowerCase().includes(searchQuery.toLowerCase()) ||
//         order.id.toLowerCase().includes(searchQuery.toLowerCase()) ||
//         order.customerPhone.toLowerCase().includes(searchQuery.toLowerCase()) ||
//         order.items.some((item) =>
//           item.name.toLowerCase().includes(searchQuery.toLowerCase())
//         ))
//   );

//   const sortedOrders = [...filteredOrders].sort((a, b) => {
//     if (sort === "newest") return new Date(b.time) - new Date(a.time);
//     if (sort === "oldest") return new Date(a.time) - new Date(b.time);
//     return 0;
//   });

//   const formatTime = (timestamp) => {
//     return new Date(timestamp).toLocaleTimeString([], {
//       hour: "2-digit",
//       minute: "2-digit",
//     });
//   };

//   const getOrderCount = (status) => {
//     if (status === "all") return orders.length;
//     return orders.filter((order) => order.status === status).length;
//   };

//   const getTotalRevenue = () => {
//     return orders.reduce((total, order) => total + order.total, 0);
//   };

//   const renderIcon = (
//     iconName,
//     size = 24,
//     color = isDark ? "#ffffff" : "#4e342e"
//   ) => {
//     switch (iconName) {
//       case "ClipboardList":
//         return <ClipboardList size={size} color={color} />;
//       case "Clock":
//         return <Clock size={size} color={color} />;
//       case "Timer":
//         return <Timer size={size} color={color} />;
//       case "CheckCircle":
//         return <CheckCircle size={size} color={color} />;
//       case "Search":
//         return <Search size={size} color={color} />;
//       case "Phone":
//         return <Phone size={size} color={color} />;
//       case "FileText":
//         return <FileText size={size} color={color} />;
//       case "Play":
//         return <Play size={size} color={color} />;
//       case "Eye":
//         return <Eye size={size} color={color} />;
//       case "DollarSign":
//         return <DollarSign size={size} color={color} />;
//       case "ShoppingBag":
//         return <ShoppingBag size={size} color={color} />;
//       default:
//         return null;
//     }
//   };

//   // styleeeeeee sheet
//   const styles = StyleSheet.create({
//     container: {
//       flex: 1,
//       backgroundColor: isDark ? "#1a1a1a" : "#f7f3ef",
//     },
//     header: {
//       paddingTop: 48,
//       paddingBottom: 28,
//       paddingHorizontal: 20,
//       backgroundColor: isDark ? "#2d2d2d" : "#8d6e63",
//       borderBottomLeftRadius: 35,
//       borderBottomRightRadius: 35,
//       marginBottom: 24,
//       elevation: 12,
//       shadowColor: "#000",
//       shadowOffset: { width: 0, height: 6 },
//       shadowOpacity: 0.15,
//       shadowRadius: 12,
//     },
//     headerTitle: {
//       fontSize: 32,
//       fontWeight: "800",
//       color: isDark ? "#ffffff" : "#fff",
//       marginBottom: 8,
//       textAlign: isRTL ? "right" : "left",
//       letterSpacing: -0.5,
//     },
//     headerSubtitle: {
//       color: isDark ? "rgba(255, 255, 255, 0.7)" : "rgba(255, 255, 255, 0.9)",
//       fontSize: 16,
//       textAlign: isRTL ? "right" : "left",
//       fontWeight: "500",
//     },
//     scrollContainer: {
//       flex: 1,
//       paddingHorizontal: 20,
//     },
//     statsContainer: {
//       flexDirection: isRTL ? "row-reverse" : "row",
//       justifyContent: "space-between",
//       marginBottom: 28,
//     },
//     card: {
//       flex: 1,
//       backgroundColor: isDark ? "#2d2d2d" : "#fffaf5",
//       borderRadius: 24,
//       padding: 20,
//       marginHorizontal: 6,
//       elevation: 8,
//       borderWidth: 1,
//       borderColor: isDark ? "#3d3d3d" : "#e5d4c0",
//       shadowColor: "#000",
//       shadowOffset: { width: 0, height: 4 },
//       shadowOpacity: 0.1,
//       shadowRadius: 8,
//     },
//     cardValue: {
//       fontSize: 26,
//       fontWeight: "800",
//       color: isDark ? "#ffffff" : "#4e342e",
//       textAlign: isRTL ? "right" : "left",
//     },
//     cardLabel: {
//       fontSize: 14,
//       color: isDark ? "#aaaaaa" : "#6b4f42",
//       marginTop: 6,
//       textAlign: isRTL ? "right" : "left",
//       fontWeight: "600",
//     },
//     section: {
//       marginBottom: 28,
//     },
//     sectionTitle: {
//       fontSize: 22,
//       fontWeight: "700",
//       color: isDark ? "#ffffff" : "#4e342e",
//       marginBottom: 16,
//       textAlign: isRTL ? "right" : "left",
//       letterSpacing: -0.3,
//     },
//     inputContainer: {
//       backgroundColor: isDark ? "#2d2d2d" : "#fffaf5",
//       borderRadius: 25,
//       paddingHorizontal: 20,
//       paddingVertical: 18,
//       elevation: 8,
//       borderWidth: 1,
//       borderColor: isDark ? "#3d3d3d" : "#e5d4c0",
//       flexDirection: isRTL ? "row-reverse" : "row",
//       alignItems: "center",
//       shadowColor: "#000",
//       shadowOffset: { width: 0, height: 4 },
//       shadowOpacity: 0.1,
//       shadowRadius: 8,
//     },
//     textInput: {
//       fontSize: 16,
//       color: isDark ? "#ffffff" : "#4e342e",
//       flex: 1,
//       textAlign: isRTL ? "right" : "left",
//       marginRight: isRTL ? 0 : 12,
//       marginLeft: isRTL ? 12 : 0,
//       fontWeight: "500",
//     },
//     filterRow: {
//       flexDirection: isRTL ? "row-reverse" : "row",
//       paddingHorizontal: 4,
//     },
//     statusButton: {
//       marginRight: isRTL ? 0 : 12,
//       marginLeft: isRTL ? 12 : 0,
//       paddingVertical: 16,
//       paddingHorizontal: 20,
//       borderRadius: 28,
//       elevation: 6,
//       backgroundColor: isDark ? "#2d2d2d" : "#fffaf5",
//       borderWidth: 1,
//       borderColor: isDark ? "#3d3d3d" : "#e5d4c0",
//       alignItems: "center",
//       justifyContent: "center",
//       minWidth: 110,
//       shadowColor: "#000",
//       shadowOffset: { width: 0, height: 3 },
//       shadowOpacity: 0.12,
//       shadowRadius: 6,
//     },
//     statusButtonSelected: {
//       backgroundColor: isDark ? "#4d4d4d" : "#6d4c41",
//       borderColor: isDark ? "#4d4d4d" : "#6d4c41",
//       elevation: 8,
//       shadowOpacity: 0.2,
//     },
//     statusIcon: {
//       marginBottom: 6,
//     },
//     statusLabel: {
//       fontSize: 13,
//       fontWeight: "700",
//       color: isDark ? "#ffffff" : "#4e342e",
//       textAlign: "center",
//       marginBottom: 4,
//       letterSpacing: 0.2,
//     },
//     statusLabelSelected: {
//       color: "#fff",
//     },
//     statusCount: {
//       fontSize: 11,
//       color: isDark ? "#aaaaaa" : "#6b4f42",
//       fontWeight: "600",
//       backgroundColor: isDark
//         ? "rgba(255, 255, 255, 0.1)"
//         : "rgba(255, 255, 255, 0.2)",
//       paddingHorizontal: 8,
//       paddingVertical: 2,
//       borderRadius: 10,
//     },
//     statusCountSelected: {
//       color: "#fff",
//       backgroundColor: "rgba(255, 255, 255, 0.3)",
//     },
//     sortContainer: {
//       flexDirection: isRTL ? "row-reverse" : "row",
//       justifyContent: isRTL ? "flex-end" : "flex-start",
//       marginBottom: 16,
//       gap: 12,
//     },
//     sortButton: {
//       paddingHorizontal: 16,
//       paddingVertical: 8,
//       borderRadius: 20,
//       backgroundColor: isDark ? "#2d2d2d" : "#fffaf5",
//       borderWidth: 1,
//       borderColor: isDark ? "#3d3d3d" : "#e5d4c0",
//     },
//     sortButtonSelected: {
//       backgroundColor: isDark ? "#4d4d4d" : "#6d4c41",
//       borderColor: isDark ? "#4d4d4d" : "#6d4c41",
//     },
//     sortButtonText: {
//       fontSize: 14,
//       color: isDark ? "#ffffff" : "#4e342e",
//       fontWeight: "600",
//     },
//     sortButtonTextSelected: {
//       color: "#fff",
//     },
//     errorContainer: {
//       backgroundColor: isDark ? "#4b1c1c" : "#fee2e2",
//       borderRadius: 20,
//       padding: 16,
//       marginBottom: 20,
//       borderWidth: 1,
//       borderColor: isDark ? "#7f2a2a" : "#fecaca",
//     },
//     errorText: {
//       color: isDark ? "#ffffff" : "#b91c1c",
//       fontSize: 16,
//       textAlign: "center",
//       fontWeight: "600",
//     },
//     ordersContainer: {
//       gap: 20,
//     },
//     orderCard: {
//       backgroundColor: isDark ? "#2d2d2d" : "#fffaf5",
//       borderRadius: 24,
//       padding: 24,
//       elevation: 8,
//       borderWidth: 1,
//       borderColor: isDark ? "#3d3d3d" : "#e5d4c0",
//       shadowColor: "#000",
//       shadowOffset: { width: 0, height: 4 },
//       shadowOpacity: 0.08,
//       shadowRadius: 12,
//     },
//     orderHeader: {
//       flexDirection: isRTL ? "row-reverse" : "row",
//       justifyContent: "space-between",
//       marginBottom: 16,
//       alignItems: "flex-start",
//     },
//     orderCustomer: {
//       fontSize: 20,
//       fontWeight: "800",
//       color: isDark ? "#ffffff" : "#4e342e",
//       textAlign: isRTL ? "right" : "left",
//       letterSpacing: -0.3,
//     },
//     orderId: {
//       fontSize: 16,
//       color: isDark ? "#aaaaaa" : "#6b4f42",
//       marginBottom: 6,
//       textAlign: isRTL ? "right" : "left",
//       fontWeight: "600",
//     },
//     orderPhone: {
//       fontSize: 14,
//       color: isDark ? "#aaaaaa" : "#6b4f42",
//       textAlign: isRTL ? "right" : "left",
//       flexDirection: isRTL ? "row-reverse" : "row",
//       alignItems: "center",
//     },
//     statusBadge: {
//       paddingHorizontal: 14,
//       paddingVertical: 8,
//       borderRadius: 22,
//       alignSelf: "flex-start",
//       shadowColor: "#000",
//       shadowOffset: { width: 0, height: 3 },
//       shadowOpacity: 0.12,
//       shadowRadius: 6,
//       elevation: 4,
//     },
//     statusBadgeText: {
//       fontWeight: "700",
//       fontSize: 12,
//       textTransform: "uppercase",
//       letterSpacing: 0.5,
//     },
//     orderItemsContainer: {
//       backgroundColor: isDark ? "#3d3d3d" : "#f7f3ef",
//       borderRadius: 20,
//       padding: 20,
//       marginBottom: 16,
//       borderWidth: 1,
//       borderColor: isDark ? "#4d4d4d" : "#e5d4c0",
//     },
//     orderItemsTitle: {
//       fontSize: 18,
//       fontWeight: "700",
//       color: isDark ? "#ffffff" : "#4e342e",
//       marginBottom: 12,
//       textAlign: isRTL ? "right" : "left",
//       letterSpacing: -0.3,
//     },
//     orderItemRow: {
//       flexDirection: isRTL ? "row-reverse" : "row",
//       justifyContent: "space-between",
//       marginBottom: 8,
//       alignItems: "center",
//     },
//     orderItemName: {
//       fontSize: 15,
//       color: isDark ? "#ffffff" : "#4e342e",
//       fontWeight: "600",
//       textAlign: isRTL ? "right" : "left",
//     },
//     orderItemPrice: {
//       fontSize: 15,
//       color: isDark ? "#aaaaaa" : "#6b4f42",
//       fontWeight: "700",
//       textAlign: isRTL ? "right" : "left",
//     },
//     orderDetailsContainer: {
//       backgroundColor: isDark ? "#3d3d3d" : "#e7d7c9",
//       borderRadius: 20,
//       padding: 20,
//       marginBottom: 16,
//       borderWidth: 1,
//       borderColor: isDark ? "#4d4d4d" : "#e5d4c0",
//     },
//     detailRow: {
//       flexDirection: isRTL ? "row-reverse" : "row",
//       justifyContent: "space-between",
//       marginBottom: 12,
//       alignItems: "center",
//     },
//     detailLabel: {
//       fontSize: 14,
//       color: isDark ? "#aaaaaa" : "#6b4f42",
//       textAlign: isRTL ? "right" : "left",
//       fontWeight: "600",
//     },
//     detailValue: {
//       fontSize: 14,
//       color: isDark ? "#ffffff" : "#4e342e",
//       fontWeight: "700",
//       textAlign: isRTL ? "right" : "left",
//     },
//     totalLabel: {
//       fontSize: 16,
//       fontWeight: "800",
//       color: isDark ? "#ffffff" : "#4e342e",
//       textAlign: isRTL ? "right" : "left",
//     },
//     totalValue: {
//       fontSize: 20,
//       fontWeight: "800",
//       color: isDark ? "#cccccc" : "#6d4c41",
//       textAlign: isRTL ? "right" : "left",
//     },
//     instructionsContainer: {
//       backgroundColor: isDark ? "#3d3d3d" : "#fff4e5",
//       borderRadius: 20,
//       padding: 20,
//       marginBottom: 16,
//       borderWidth: 1,
//       borderColor: isDark ? "#4d4d4d" : "#e5d4c0",
//     },
//     instructionsTitle: {
//       fontSize: 16,
//       fontWeight: "700",
//       color: isDark ? "#ffffff" : "#4e342e",
//       marginBottom: 8,
//       textAlign: isRTL ? "right" : "left",
//       flexDirection: isRTL ? "row-reverse" : "row",
//       alignItems: "center",
//     },
//     instructionsText: {
//       fontSize: 15,
//       color: isDark ? "#aaaaaa" : "#6b4f42",
//       textAlign: isRTL ? "right" : "left",
//       lineHeight: 22,
//       fontWeight: "500",
//     },
//     actionsRow: {
//       flexDirection: isRTL ? "row-reverse" : "row",
//       marginTop: 12,
//       gap: 16,
//     },
//     startButton: {
//       flex: 1,
//       backgroundColor: isDark ? "#4d4d4d" : "#6d4c41",
//       padding: 16,
//       borderRadius: 20,
//       alignItems: "center",
//       flexDirection: isRTL ? "row-reverse" : "row",
//       justifyContent: "center",
//       elevation: 6,
//       shadowColor: "#000",
//       shadowOffset: { width: 0, height: 4 },
//       shadowOpacity: 0.2,
//       shadowRadius: 6,
//     },
//     completeButton: {
//       flex: 1,
//       backgroundColor: isDark ? "#4d4d4d" : "#8d6e63",
//       padding: 16,
//       borderRadius: 20,
//       alignItems: "center",
//       flexDirection: isRTL ? "row-reverse" : "row",
//       justifyContent: "center",
//       elevation: 6,
//       shadowColor: "#000",
//       shadowOffset: { width: 0, height: 4 },
//       shadowOpacity: 0.2,
//       shadowRadius: 6,
//     },
//     detailsButton: {
//       backgroundColor: isDark ? "#3d3d3d" : "#d7bfa9",
//       paddingHorizontal: 24,
//       paddingVertical: 16,
//       borderRadius: 20,
//       alignItems: "center",
//       flexDirection: isRTL ? "row-reverse" : "row",
//       justifyContent: "center",
//       elevation: 4,
//       shadowColor: "#000",
//       shadowOffset: { width: 0, height: 2 },
//       shadowOpacity: 0.1,
//       shadowRadius: 4,
//       borderWidth: 1,
//       borderColor: isDark ? "#4d4d4d" : "#e5d4c0",
//     },
//     actionButtonText: {
//       color: "#fff",
//       fontWeight: "700",
//       marginRight: isRTL ? 0 : 8,
//       marginLeft: isRTL ? 8 : 0,
//       fontSize: 15,
//       letterSpacing: 0.3,
//     },
//     detailsButtonText: {
//       color: isDark ? "#ffffff" : "#4e342e",
//       fontWeight: "700",
//       marginRight: isRTL ? 0 : 8,
//       marginLeft: isRTL ? 8 : 0,
//       fontSize: 15,
//       letterSpacing: 0.3,
//     },
//   });

//   return (
//     <View style={styles.container}>
//       <View style={styles.header}>
//         <Text style={styles.headerTitle}>{t("worker.orders")}</Text>
//         <Text style={styles.headerSubtitle}>
//           {t("worker.manageAndTrackOrders")}
//         </Text>
//       </View>

//       <ScrollView
//         style={styles.scrollContainer}
//         showsVerticalScrollIndicator={false}
//         refreshControl={
//           <RefreshControl
//             refreshing={loading}
//             onRefresh={fetchOrders}
//             tintColor={isDark ? "#ffffff" : "#8d6e63"}
//             colors={[isDark ? "#ffffff" : "#8d6e63"]}
//           />
//         }
//       >
//         {error && (
//           <View style={styles.errorContainer}>
//             <Text style={styles.errorText}>{error}</Text>
//           </View>
//         )}

//         {/* اجمالي الطلبات و اجمالي الايرادات */}
//         <View style={styles.statsContainer}>
//           <View style={styles.card}>
//             <Text style={styles.cardValue}>{orders.length}</Text>
//             <Text style={styles.cardLabel}>{t("worker.totalOrders")}</Text>
//           </View>
//           <View style={styles.card}>
//             <Text
//               style={[
//                 styles.cardValue,
//                 { color: isDark ? "#cccccc" : "#6d4c41" },
//               ]}
//             >
//               ${getTotalRevenue().toFixed(2)}
//             </Text>
//             <Text style={styles.cardLabel}>{t("worker.totalRevenue")}</Text>
//           </View>
//         </View>

//         {/* search box */}
//         <View style={styles.section}>
//           <View style={styles.inputContainer}>
//             {renderIcon("Search", 20, isDark ? "#ffffff" : "#6b4f42")}
//             <TextInput
//               style={styles.textInput}
//               placeholder={t("worker.searchOrdersByCustomer")}
//               placeholderTextColor={isDark ? "#aaaaaa" : "#9CA3AF"}
//               value={searchQuery}
//               onChangeText={setSearchQuery}
//             />
//           </View>
//         </View>

//         {/* قسم الفلترة السريعة */}
//         <View style={styles.section}>
//           <TouchableOpacity
//             style={styles.inputContainer}
//             onPress={toggleFilter}
//           >
//             <Text style={styles.textInput}>{t("worker.filterOptions")}</Text>
//           </TouchableOpacity>

//           {filterExpanded && (
//             <View style={{ marginTop: 12 }}>
//               {/* // فیلتر حسب الوضع */}
//               <View style={styles.section}>
//                 <Text style={styles.sectionTitle}>
//                   {t("worker.filterByStatus")}
//                 </Text>
//                 <ScrollView
//                   horizontal
//                   showsHorizontalScrollIndicator={false}
//                   inverted={isRTL}
//                   contentContainerStyle={
//                     isRTL ? { flexDirection: "row-reverse" } : {}
//                   }
//                 >
//                   <View style={styles.filterRow}>
//                     {statuses.map((status) => (
//                       <TouchableOpacity
//                         key={status.key}
//                         onPress={() => setSelectedStatus(status.key)}
//                         style={[
//                           styles.statusButton,
//                           selectedStatus === status.key &&
//                             styles.statusButtonSelected,
//                         ]}
//                       >
//                         <View style={styles.statusIcon}>
//                           {renderIcon(
//                             status.icon,
//                             20,
//                             selectedStatus === status.key
//                               ? "#fff"
//                               : isDark
//                                 ? "#ffffff"
//                                 : "#4e342e"
//                           )}
//                         </View>
//                         <Text
//                           style={[
//                             styles.statusLabel,
//                             selectedStatus === status.key &&
//                               styles.statusLabelSelected,
//                           ]}
//                         >
//                           {status.label}
//                         </Text>
//                         <Text
//                           style={[
//                             styles.statusCount,
//                             selectedStatus === status.key &&
//                               styles.statusCountSelected,
//                           ]}
//                         >
//                           {getOrderCount(status.key)}
//                         </Text>
//                       </TouchableOpacity>
//                     ))}
//                   </View>
//                 </ScrollView>
//               </View>

//               {/* // فیلتر حسب طريقة الدفع */}
//               <View style={styles.section}>
//                 <Text style={styles.sectionTitle}>
//                   {t("worker.filterByPayment")}
//                 </Text>
//                 <ScrollView
//                   horizontal
//                   showsHorizontalScrollIndicator={false}
//                   inverted={isRTL}
//                   contentContainerStyle={
//                     isRTL ? { flexDirection: "row-reverse" } : {}
//                   }
//                 >
//                   <View style={styles.filterRow}>
//                     {paymentMethods.map((method) => (
//                       <TouchableOpacity
//                         key={method.key}
//                         onPress={() => setSelectedPaymentMethod(method.key)}
//                         style={[
//                           styles.statusButton,
//                           selectedPaymentMethod === method.key &&
//                             styles.statusButtonSelected,
//                         ]}
//                       >
//                         <Text
//                           style={[
//                             styles.statusLabel,
//                             selectedPaymentMethod === method.key &&
//                               styles.statusLabelSelected,
//                           ]}
//                         >
//                           {method.label}
//                         </Text>
//                       </TouchableOpacity>
//                     ))}
//                   </View>
//                 </ScrollView>
//               </View>

//               {/* // فلتر حسب الاقدميه */}
//               <View style={styles.section}>
//                 <Text style={styles.sectionTitle}>{t("worker.sortby")}</Text>
//                 <View style={styles.sortContainer}>
//                   <TouchableOpacity
//                     style={[
//                       styles.sortButton,
//                       sort === "newest" && styles.sortButtonSelected,
//                     ]}
//                     onPress={() => setSort("newest")}
//                   >
//                     <Text
//                       style={[
//                         styles.sortButtonText,
//                         sort === "newest" && styles.sortButtonTextSelected,
//                       ]}
//                     >
//                       {t("worker.sortNewest")}
//                     </Text>
//                   </TouchableOpacity>
//                   <TouchableOpacity
//                     style={[
//                       styles.sortButton,
//                       sort === "oldest" && styles.sortButtonSelected,
//                     ]}
//                     onPress={() => setSort("oldest")}
//                   >
//                     <Text
//                       style={[
//                         styles.sortButtonText,
//                         sort === "oldest" && styles.sortButtonTextSelected,
//                       ]}
//                     >
//                       {t("worker.sortOldest")}
//                     </Text>
//                   </TouchableOpacity>
//                 </View>
//               </View>
//             </View>
//           )}
//         </View>

//         <View style={styles.section}>
//           <Text style={styles.sectionTitle}>
//             {t("worker.orders")} ({sortedOrders.length})
//           </Text>
//           <View style={styles.ordersContainer}>
//             {sortedOrders.map((order) => {
//               const isExpanded = expandedOrderId === order.id;
//               const statusStyle = getStatusColor(order.status);

//               return (
//                 <TouchableOpacity
//                   key={order.id}
//                   onPress={() =>
//                     setExpandedOrderId(isExpanded ? null : order.id)
//                   }
//                   style={styles.orderCard}
//                   activeOpacity={0.8}
//                 >
//                   {/* ===== رأس الطلب ===== */}
//                   <View style={styles.orderHeader}>
//                     <View style={{ flex: 1 }}>
//                       <Text style={styles.orderCustomer}>
//                         {order.customerName}
//                       </Text>
//                       <Text style={styles.orderId}>
//                         {t("worker.orderId")}: {order.id}
//                       </Text>
//                       <View
//                         style={{
//                           flexDirection: isRTL ? "row-reverse" : "row",
//                           alignItems: "center",
//                         }}
//                       >
//                         {renderIcon(
//                           "Phone",
//                           14,
//                           isDark ? "#aaaaaa" : "#6b4f42"
//                         )}
//                         <Text style={styles.orderPhone}>
//                           {order.customerPhone}
//                         </Text>
//                       </View>
//                     </View>
//                     <View
//                       style={[
//                         styles.statusBadge,
//                         { backgroundColor: statusStyle.backgroundColor },
//                       ]}
//                     >
//                       <Text
//                         style={[
//                           styles.statusBadgeText,
//                           { color: statusStyle.textColor },
//                         ]}
//                       >
//                         {getStatusText(order.status)}
//                       </Text>
//                     </View>
//                   </View>

//                   {/* ===== التفاصيل (تظهر فقط لو Expanded) ===== */}
//                   {isExpanded && (
//                     <>
//                       {/* المنتجات */}
//                       <View style={styles.orderItemsContainer}>
//                         <View
//                           style={{
//                             flexDirection: isRTL ? "row-reverse" : "row",
//                             alignItems: "center",
//                             marginBottom: 12,
//                           }}
//                         >
//                           {renderIcon(
//                             "ShoppingBag",
//                             18,
//                             isDark ? "#ffffff" : "#4e342e"
//                           )}
//                           <Text style={styles.orderItemsTitle}>
//                             {t("worker.orderItemsTitle")}
//                           </Text>
//                         </View>
//                         {order.items.map((item, idx) => (
//                           <TouchableOpacity
//                             key={idx}
//                             style={styles.orderItemRow}
//                             onPress={() => viewProductDetails(item)}
//                           >
//                             <Text style={styles.orderItemName}>
//                               {item.quantity}x {item.name}
//                             </Text>
//                             <Text style={styles.orderItemPrice}>
//                               ${item.price.toFixed(2)}
//                             </Text>
//                           </TouchableOpacity>
//                         ))}
//                       </View>

//                       {/* التفاصيل العامة */}
//                       <View style={styles.orderDetailsContainer}>
//                         <View style={styles.detailRow}>
//                           <Text style={styles.detailLabel}>
//                             {t("worker.orderTime")}
//                           </Text>
//                           <Text style={styles.detailValue}>
//                             {formatTime(order.time)}
//                           </Text>
//                         </View>
//                         <View style={styles.detailRow}>
//                           <Text style={styles.detailLabel}>
//                             {t("worker.estimatedReady")}
//                           </Text>
//                           <Text
//                             style={[
//                               styles.detailValue,
//                               { color: isDark ? "#cccccc" : "#6d4c41" },
//                             ]}
//                           >
//                             {order.estimatedTime}
//                           </Text>
//                         </View>
//                         <View style={styles.detailRow}>
//                           <Text style={styles.detailLabel}>
//                             {t("worker.timeRemaining")}
//                           </Text>
//                           <Text style={styles.detailValue}>
//                             {getRemainingTime(order.estimatedTime)}
//                           </Text>
//                         </View>
//                         <View style={styles.detailRow}>
//                           <Text style={styles.detailLabel}>
//                             {t("worker.payment")}
//                           </Text>
//                           <Text style={styles.detailValue}>
//                             {getTranslatedPaymentMethod(order.paymentMethod)}
//                           </Text>
//                         </View>
//                         <View style={styles.detailRow}>
//                           <Text style={styles.totalLabel}>
//                             {t("common.total")}:
//                           </Text>
//                           <Text style={styles.totalValue}>
//                             ${order.total.toFixed(2)}
//                           </Text>
//                         </View>
//                       </View>

//                       {/* تعليمات خاصة */}
//                       {order.specialInstructions ? (
//                         <View style={styles.instructionsContainer}>
//                           <View
//                             style={{
//                               flexDirection: isRTL ? "row-reverse" : "row",
//                               alignItems: "center",
//                               marginBottom: 8,
//                             }}
//                           >
//                             {renderIcon(
//                               "FileText",
//                               16,
//                               isDark ? "#ffffff" : "#4e342e"
//                             )}
//                             <Text style={styles.instructionsTitle}>
//                               {t("worker.specialInstructions")}:
//                             </Text>
//                           </View>
//                           <Text style={styles.instructionsText}>
//                             {order.specialInstructions}
//                           </Text>
//                         </View>
//                       ) : null}

//                       {/* أزرار العمليات */}
//                       {order.status !== "completed" && (
//                         <View style={styles.actionsRow}>
//                           {order.status === "pending" && (
//                             <TouchableOpacity
//                               style={styles.startButton}
//                               onPress={() => startOrder(order.id)}
//                             >
//                               {renderIcon("Play", 16, "#fff")}
//                               <Text style={styles.actionButtonText}>
//                                 {t("worker.startOrderButton")}
//                               </Text>
//                             </TouchableOpacity>
//                           )}
//                           {order.status === "in-progress" && (
//                             <TouchableOpacity
//                               style={styles.completeButton}
//                               onPress={() => completeOrder(order.id)}
//                             >
//                               {renderIcon("CheckCircle", 16, "#fff")}
//                               <Text style={styles.actionButtonText}>
//                                 {t("worker.completeOrderButton")}
//                               </Text>
//                             </TouchableOpacity>
//                           )}
//                           <TouchableOpacity
//                             style={styles.detailsButton}
//                             onPress={() => viewDetails(order)}
//                           >
//                             {renderIcon(
//                               "Eye",
//                               16,
//                               isDark ? "#ffffff" : "#4e342e"
//                             )}
//                             <Text style={styles.detailsButtonText}>
//                               {t("worker.detailsButton")}
//                             </Text>
//                           </TouchableOpacity>
//                         </View>
//                       )}
//                     </>
//                   )}
//                 </TouchableOpacity>
//               );
//             })}
//           </View>
//         </View>
//       </ScrollView>
//     </View>
//   );
// };

// export default OrdersScreen;

____________________________________________________________________________________________________

// import React, { useState } from "react";
// import {
//   View,
//   Text,
//   ScrollView,
//   TouchableOpacity,
//   TextInput,
//   StyleSheet,
//   Dimensions,
//   Alert,
// } from "react-native";
// import { useTranslation } from "react-i18next";
// import { useSelector } from "react-redux";
// import { LinearGradient } from "expo-linear-gradient";
// import {
//   Coffee,
//   Zap,
//   Sun,
//   Utensils,
//   Snowflake,
//   Clock,
//   CupSoda,
//   Star,
//   TrendingUp,
//   RotateCcw,
//   Croissant,
//   Sandwich,
//   CakeSlice,
//   Plus,
//   Minus,
//   X,
//   Send,
//   GlassWater,
// } from "lucide-react-native";

// const { width } = Dimensions.get("window");

// const NewOrderScreen = () => {
//   const { t } = useTranslation();
//   const { currentLanguage } = useSelector((state) => state.language);
//   const isRTL = currentLanguage === "ar";
//   const [customerName, setCustomerName] = useState("");
//   const [selectedCategory, setSelectedCategory] = useState("hot");
//   const [cart, setCart] = useState([]);

//   const products = {
//     hot: [
//       { id: 1, name: "Espresso", price: 2.99, icon: "Coffee", preparationTime: "2 min", popularity: "Popular", popularityIcon: "Star" },
//       { id: 2, name: "Cappuccino", price: 3.99, icon: "Coffee", preparationTime: "4 min", popularity: "Best Seller", popularityIcon: "Star" },
//       { id: 3, name: "Americano", price: 2.49, icon: "Coffee", preparationTime: "3 min", popularity: "", popularityIcon: "" },
//     ],
//     cold: [
//       { id: 4, name: "Iced Latte", price: 4.49, icon: "CupSoda", preparationTime: "3 min", popularity: "Refreshing", popularityIcon: "RotateCcw" },
//       { id: 5, name: "Frappuccino", price: 4.99, icon: "CupSoda", preparationTime: "5 min", popularity: "Trending", popularityIcon: "TrendingUp" },
//       { id: 6, name: "Cold Brew", price: 3.99, icon: "CupSoda", preparationTime: "2 min", popularity: "", popularityIcon: "" },
//     ],
//     food: [
//       { id: 7, name: "Croissant", price: 2.49, icon: "Croissant", preparationTime: "1 min", popularity: "Fresh", popularityIcon: "RotateCcw" },
//       { id: 8, name: "Sandwich", price: 5.99, icon: "Sandwich", preparationTime: "3 min", popularity: "Filling", popularityIcon: "Utensils" },
//       { id: 9, name: "Muffin", price: 2.99, icon: "CakeSlice", preparationTime: "1 min", popularity: "", popularityIcon: "" },
//     ],
//   };

//   const categories = [
//     { key: "hot", label: t("worker.hotDrinks"), icon: "Sun" },
//     { key: "cold", label: t("worker.coldDrinks"), icon: "Snowflake" },
//     { key: "food", label: t("worker.foodItems"), icon: "Utensils" },
//   ];

//   const addToCart = (product) => {
//     const existingItem = cart.find((item) => item.id === product.id);
//     if (existingItem) {
//       updateQuantity(product.id, existingItem.quantity + 1);
//     } else {
//       setCart([...cart, { ...product, quantity: 1 }]);
//     }
//   };

//   const removeFromCart = (productId) => {
//     setCart(cart.filter((item) => item.id !== productId));
//   };

//   const updateQuantity = (productId, newQuantity) => {
//     if (newQuantity < 1) return;
//     setCart(
//       cart.map((item) =>
//         item.id === productId ? { ...item, quantity: newQuantity } : item
//       )
//     );
//   };

//   const getTotal = () => {
//     return cart.reduce((total, item) => total + item.price * item.quantity, 0);
//   };

//   const getCartItemCount = () => {
//     return cart.reduce((total, item) => total + item.quantity, 0);
//   };

//   const getTranslatedProductName = (productName) => {
//     const translations = {
//       Espresso: t("worker.espresso"),
//       Cappuccino: t("worker.cappuccino"),
//       Americano: t("worker.americano"),
//       "Iced Latte": t("worker.icedLatte"),
//       Frappuccino: t("worker.frappuccino"),
//       "Cold Brew": t("worker.coldBrew"),
//       Croissant: t("worker.croissant"),
//       Sandwich: t("worker.sandwich"),
//       Muffin: t("worker.muffin"),
//     };
//     return translations[productName] || productName;
//   };

//   const getTranslatedProductDescription = (productName) => {
//     const translations = {
//       Espresso: t("worker.strongPureCoffee"),
//       Cappuccino: t("worker.espressoWithMilk"),
//       Americano: t("worker.espressoWithWater"),
//       "Iced Latte": t("worker.espressoWithColdMilk"),
//       Frappuccino: t("worker.blendedCoffeeDrink"),
//       "Cold Brew": t("worker.smoothBoldCold"),
//       Croissant: t("worker.butteryFlakyPastry"),
//       Sandwich: t("worker.freshTastySandwich"),
//       Muffin: t("worker.sweetMoistMuffin"),
//     };
//     return translations[productName] || "";
//   };

//   const getTranslatedPopularity = (popularity) => {
//     const translations = {
//       Popular: t("worker.popular"),
//       "Best Seller": t("worker.bestSeller"),
//       Refreshing: t("worker.refreshing"),
//       Trending: t("worker.trending"),
//       Fresh: t("worker.fresh"),
//       Filling: t("worker.filling"),
//     };
//     return translations[popularity] || popularity;
//   };

//   const renderIcon = (iconName, size = 24, color = "#4e342e") => {
//     switch (iconName) {
//       case "Coffee":
//         return <Coffee size={size} color={color} />;
//       case "Sun":
//         return <Sun size={size} color={color} />;
//       case "Snowflake":
//         return <Snowflake size={size} color={color} />;
//       case "Utensils":
//         return <Utensils size={size} color={color} />;
//       case "Croissant":
//         return <Croissant size={size} color={color} />;
//       case "Sandwich":
//         return <Sandwich size={size} color={color} />;
//       case "CakeSlice":
//         return <CakeSlice size={size} color={color} />;
//       case "CupSoda":
//         return <CupSoda size={size} color={color} />;
//       case "Star":
//         return <Star size={size} color={color} />;
//       case "TrendingUp":
//         return <TrendingUp size={size} color={color} />;
//       case "RotateCcw":
//         return <RotateCcw size={size} color={color} />;
//       case "Plus":
//         return <Plus size={size} color={color} />;
//       case "Minus":
//         return <Minus size={size} color={color} />;
//       case "X":
//         return <X size={size} color={color} />;
//       case "Send":
//         return <Send size={size} color={color} />;
//       default:
//         return null;
//     }
//   };

//   const placeOrder = async () => {
//     if (!customerName || cart.length === 0) {
//       Alert.alert(t("worker.error"), t("worker.enterCustomerAndItems"));
//       return;
//     }

//     const orderData = {
//       customer_id: 1, // يمكن تعديله بناءً على معرف العميل
//       branch_id: 1,  // يمكن تعديله بناءً على فرع معين
//       user_id: 1,    // يمكن تعديله بناءً على معرف المستخدم الحالي
//       total_amount: getTotal().toFixed(2),
//       payment_method: "cash", // يمكن جعله ديناميكي لاحقًا
//       items: cart.map((item) => ({
//         product_id: item.id,
//         quantity: item.quantity,
//         unit_price: item.price,
//         subtotal: (item.price * item.quantity).toFixed(2),
//       })),
//     };

//     try {
//       const response = await fetch("http://api-coffee.m-zedan.com/api/admin/orders", {
//         method: "POST",
//         headers: {
//           "Content-Type": "application/json",
//           Authorization: `Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vYXBpLWNvZmZlZS5tLXplZGFuLmNvbS9hcGkvYWRtaW4vYXV0aC9sb2dpbiIsImlhdCI6MTc1Mjg1NjcyNCwiZXhwIjoxNzUyODYwMzI0LCJuYmYiOjE3NTI4NTY3MjQsImp0aSI6Imo2cG1ieE56YUtzcmNrenciLCJzdWIiOiIxNSIsInBydiI6IjIzYmQ1Yzg5NDlmNjAwYWRiMzllNzAxYzQwMDg3MmRiN2E1OTc2ZjcifQ.y4EQiD5Wvn5bQzc29nS1IziFnTNC02Z-e6DmGLx3mlw`, // استبدل بتوكن صالح
//         },
//         body: JSON.stringify(orderData),
//       });

//       if (response.ok) {
//         const result = await response.json();
//         Alert.alert(t("worker.success"), t("worker.orderPlaced"));
//         setCart([]);
//         setCustomerName("");
//       } else {
//         throw new Error("Failed to place order");
//       }
//     } catch (error) {
//       console.error("Error placing order:", error);
//       Alert.alert(t("worker.error"), t("worker.orderFailed"));
//     }
//   };

//   const styles = StyleSheet.create({
//     container: { flex: 1, backgroundColor: "#f7f3ef" },
//     header: {
//       paddingTop: 48,
//       paddingBottom: 24,
//       paddingHorizontal: 16,
//       backgroundColor: "#8d6e63",
//       borderBottomLeftRadius: 30,
//       borderBottomRightRadius: 30,
//     },
//     headerTitle: {
//       fontSize: 28,
//       fontWeight: "bold",
//       color: "#fff",
//       marginBottom: 8,
//       textAlign: isRTL ? "right" : "left",
//     },
//     headerSubtitle: {
//       color: "#f0ebe7",
//       fontSize: 18,
//       textAlign: isRTL ? "right" : "left",
//     },
//     scrollContainer: { flex: 1, paddingHorizontal: 16 },
//     section: { marginVertical: 24 },
//     sectionTitle: {
//       fontSize: 18,
//       fontWeight: "600",
//       color: "#4e342e",
//       marginBottom: 12,
//       textAlign: isRTL ? "right" : "left",
//     },
//     inputContainer: {
//       backgroundColor: "#fffaf5",
//       borderRadius: 20,
//       padding: 16,
//       elevation: 4,
//       borderWidth: 1,
//       borderColor: "#e5d4c0",
//     },
//     textInput: {
//       fontSize: 18,
//       color: "#4e342e",
//       textAlign: isRTL ? "right" : "left",
//     },
//     categoryButton: {
//       marginRight: isRTL ? 0 : 16,
//       marginLeft: isRTL ? 16 : 0,
//       paddingVertical: 16,
//       paddingHorizontal: 24,
//       borderRadius: 20,
//       elevation: 4,
//       backgroundColor: "#fffaf5",
//       borderWidth: 1,
//       borderColor: "#e5d4c0",
//     },
//     categoryButtonSelected: { backgroundColor: "#6d4c41" },
//     categoryIcon: { marginBottom: 4, alignItems: "center" },
//     categoryLabel: {
//       fontWeight: "600",
//       color: "#4e342e",
//       textAlign: "center",
//     },
//     categoryLabelSelected: { color: "#fff" },
//     productsContainer: {
//       flexDirection: "row",
//       flexWrap: "wrap",
//       justifyContent: "space-between",
//       gap: 12,
//     },
//     productsContainerRTL: { flexDirection: "row-reverse" },
//     productCard: {
//       backgroundColor: "#fffaf5",
//       borderRadius: 16,
//       padding: 16,
//       elevation: 3,
//       borderWidth: 1,
//       borderColor: "#e5d4c0",
//       width: (width - 48) / 2,
//       marginBottom: 12,
//     },
//     productHeader: {
//       flexDirection: isRTL ? "row-reverse" : "row",
//       justifyContent: "space-between",
//       alignItems: "flex-start",
//       marginBottom: 12,
//     },
//     productImageContainer: {
//       width: 48,
//       height: 48,
//       borderRadius: 12,
//       alignItems: "center",
//       justifyContent: "center",
//       backgroundColor: "#e5d4c0",
//     },
//     productContent: { flex: 1 },
//     productName: {
//       fontSize: 16,
//       fontWeight: "bold",
//       color: "#4e342e",
//       marginBottom: 6,
//       lineHeight: 20,
//       textAlign: isRTL ? "right" : "left",
//     },
//     productPopularity: {
//       flexDirection: isRTL ? "row-reverse" : "row",
//       alignItems: "center",
//       backgroundColor: "#f0c7b4",
//       paddingHorizontal: 6,
//       paddingVertical: 3,
//       borderRadius: 8,
//     },
//     productPopularityText: {
//       fontSize: 9,
//       color: "#4e342e",
//       marginLeft: isRTL ? 0 : 3,
//       marginRight: isRTL ? 3 : 0,
//       fontWeight: "600",
//     },
//     productDescription: {
//       color: "#6b4f42",
//       marginBottom: 12,
//       fontSize: 12,
//       lineHeight: 16,
//       textAlign: isRTL ? "right" : "left",
//     },
//     productFooter: {
//       flexDirection: isRTL ? "row-reverse" : "row",
//       justifyContent: "space-between",
//       alignItems: "center",
//     },
//     productInfo: {
//       flex: 1,
//       marginRight: isRTL ? 0 : 8,
//       marginLeft: isRTL ? 8 : 0,
//     },
//     productPrice: {
//       fontSize: 16,
//       fontWeight: "bold",
//       color: "#6d4c41",
//       marginBottom: 4,
//       textAlign: isRTL ? "right" : "left",
//     },
//     productTimeContainer: {
//       flexDirection: isRTL ? "row-reverse" : "row",
//       alignItems: "center",
//     },
//     productTime: {
//       fontSize: 11,
//       color: "#6b4f42",
//       marginLeft: isRTL ? 0 : 3,
//       marginRight: isRTL ? 3 : 0,
//     },
//     addButton: {
//       backgroundColor: "#8d6e63",
//       width: 40,
//       height: 40,
//       borderRadius: 20,
//       alignItems: "center",
//       justifyContent: "center",
//       elevation: 3,
//     },
//     cartSection: { marginBottom: 32 },
//     cartHeader: {
//       flexDirection: isRTL ? "row-reverse" : "row",
//       justifyContent: "space-between",
//       alignItems: "center",
//       marginBottom: 16,
//     },
//     cartTitle: {
//       fontSize: 20,
//       fontWeight: "bold",
//       color: "#4e342e",
//       textAlign: isRTL ? "right" : "left",
//     },
//     cartItemCount: {
//       backgroundColor: "#d7bfa9",
//       paddingHorizontal: 12,
//       paddingVertical: 4,
//       borderRadius: 16,
//     },
//     cartItemCountText: {
//       color: "#4e342e",
//       fontWeight: "600",
//       textAlign: "center",
//     },
//     cartContainer: {
//       backgroundColor: "#fffaf5",
//       borderRadius: 20,
//       padding: 16,
//       elevation: 4,
//       borderWidth: 1,
//       borderColor: "#e5d4c0",
//     },
//     cartItem: {
//       backgroundColor: "#f7f3ef",
//       borderRadius: 12,
//       padding: 16,
//       marginBottom: 16,
//     },
//     cartItemRow: {
//       flexDirection: isRTL ? "row-reverse" : "row",
//       justifyContent: "space-between",
//       alignItems: "center",
//     },
//     cartItemDetails: { flex: 1 },
//     cartItemName: {
//       fontSize: 18,
//       fontWeight: "600",
//       color: "#4e342e",
//       textAlign: isRTL ? "right" : "left",
//     },
//     cartItemPrice: {
//       color: "#6b4f42",
//       textAlign: isRTL ? "right" : "left",
//     },
//     cartItemActions: {
//       flexDirection: isRTL ? "row-reverse" : "row",
//       alignItems: "center",
//     },
//     qtyButton: {
//       backgroundColor: "#d7bfa9",
//       width: 40,
//       height: 40,
//       borderRadius: 20,
//       alignItems: "center",
//       justifyContent: "center",
//     },
//     qtyPlusButton: { backgroundColor: "#6d4c41" },
//     cartItemQty: {
//       marginHorizontal: 16,
//       fontSize: 18,
//       fontWeight: "600",
//       color: "#4e342e",
//       minWidth: 30,
//       textAlign: "center",
//     },
//     removeButton: {
//       marginLeft: isRTL ? 0 : 12,
//       marginRight: isRTL ? 12 : 0,
//       backgroundColor: "#8d6e63",
//       width: 40,
//       height: 40,
//       borderRadius: 20,
//       alignItems: "center",
//       justifyContent: "center",
//     },
//     cartItemTotalContainer: {
//       marginTop: 8,
//       paddingTop: 8,
//       borderTopWidth: 1,
//       borderTopColor: "#e5d4c0",
//     },
//     cartItemTotal: {
//       textAlign: isRTL ? "left" : "right",
//       fontSize: 18,
//       fontWeight: "bold",
//       color: "#6d4c41",
//     },
//     cartTotalSection: {
//       marginTop: 24,
//       paddingTop: 16,
//       borderTopWidth: 2,
//       borderTopColor: "#e5d4c0",
//     },
//     cartTotalRow: {
//       flexDirection: isRTL ? "row-reverse" : "row",
//       justifyContent: "space-between",
//       alignItems: "center",
//       marginBottom: 16,
//     },
//     cartTotalLabel: {
//       fontSize: 20,
//       fontWeight: "600",
//       color: "#4e342e",
//       textAlign: isRTL ? "right" : "left",
//     },
//     cartTotalAmount: {
//       fontSize: 24,
//       fontWeight: "bold",
//       color: "#6d4c41",
//       textAlign: isRTL ? "right" : "left",
//     },
//     placeOrderButton: {
//       backgroundColor: "#8d6e63",
//       padding: 16,
//       borderRadius: 20,
//       elevation: 4,
//     },
//     placeOrderButtonContent: {
//       flexDirection: isRTL ? "row-reverse" : "row",
//       alignItems: "center",
//       justifyContent: "center",
//     },
//     placeOrderButtonText: {
//       color: "#fff",
//       textAlign: "center",
//       fontSize: 18,
//       fontWeight: "bold",
//       marginRight: isRTL ? 0 : 8,
//       marginLeft: isRTL ? 8 : 0,
//     },
//     productsContainerRTL: { flexDirection: "row-reverse" },
//   });

//   return (
//     <View style={styles.container}>
//       <View style={styles.header}>
//         <Text style={styles.headerTitle}>{t("worker.newOrder")}</Text>
//         <Text style={styles.headerSubtitle}>{t("worker.createNewOrder")}</Text>
//       </View>

//       <ScrollView
//         style={styles.scrollContainer}
//         showsVerticalScrollIndicator={false}
//       >
//         <View style={styles.section}>
//           <Text style={styles.sectionTitle}>
//             {t("worker.customerInformation")}
//           </Text>
//           <View style={styles.inputContainer}>
//             <TextInput
//               style={styles.textInput}
//               value={customerName}
//               onChangeText={setCustomerName}
//               placeholder={t("worker.enterCustomerName")}
//               placeholderTextColor="#9CA3AF"
//             />
//           </View>
//         </View>

//         <View style={styles.section}>
//           <Text style={styles.sectionTitle}>{t("worker.selectCategory")}</Text>
//           <ScrollView
//             horizontal
//             showsHorizontalScrollIndicator={false}
//             inverted={isRTL}
//             contentContainerStyle={isRTL ? { flexDirection: "row-reverse" } : {}}
//           >
//             {categories.map((category) => (
//               <TouchableOpacity
//                 key={category.key}
//                 onPress={() => setSelectedCategory(category.key)}
//                 style={[
//                   styles.categoryButton,
//                   selectedCategory === category.key && styles.categoryButtonSelected,
//                 ]}
//               >
//                 <View style={styles.categoryIcon}>
//                   {renderIcon(
//                     category.icon,
//                     24,
//                     selectedCategory === category.key ? "#fff" : "#4e342e"
//                   )}
//                 </View>
//                 <Text
//                   style={[
//                     styles.categoryLabel,
//                     selectedCategory === category.key && styles.categoryLabelSelected,
//                   ]}
//                 >
//                   {category.label}
//                 </Text>
//               </TouchableOpacity>
//             ))}
//           </ScrollView>
//         </View>

//         <View style={styles.section}>
//           <Text style={styles.sectionTitle}>{t("worker.availableItems")}</Text>
//           <View style={[styles.productsContainer, isRTL && styles.productsContainerRTL]}>
//             {products[selectedCategory].map((product) => (
//               <View key={product.id} style={styles.productCard}>
//                 <View style={styles.productHeader}>
//                   <View style={styles.productImageContainer}>
//                     {renderIcon(product.icon, 28, "#4e342e")}
//                   </View>
//                   {product.popularity && (
//                     <View style={styles.productPopularity}>
//                       {renderIcon(product.popularityIcon, 10, "#4e342e")}
//                       <Text style={styles.productPopularityText}>
//                         {getTranslatedPopularity(product.popularity)}
//                       </Text>
//                     </View>
//                   )}
//                 </View>

//                 <View style={styles.productContent}>
//                   <Text style={styles.productName}>
//                     {getTranslatedProductName(product.name)}
//                   </Text>
//                   <Text style={styles.productDescription}>
//                     {getTranslatedProductDescription(product.name)}
//                   </Text>

//                   <View style={styles.productFooter}>
//                     <View style={styles.productInfo}>
//                       <Text style={styles.productPrice}>
//                         ${product.price.toFixed(2)}
//                       </Text>
//                       <View style={styles.productTimeContainer}>
//                         {renderIcon("Clock", 12, "#6b4f42")}
//                         <Text style={styles.productTime}>
//                           {product.preparationTime}
//                         </Text>
//                       </View>
//                     </View>

//                     <TouchableOpacity
//                       style={styles.addButton}
//                       onPress={() => addToCart(product)}
//                     >
//                       {renderIcon("Plus", 18, "#fff")}
//                     </TouchableOpacity>
//                   </View>
//                 </View>
//               </View>
//             ))}
//           </View>
//         </View>

//         {cart.length > 0 && (
//           <View style={styles.cartSection}>
//             <View style={styles.cartHeader}>
//               <Text style={styles.cartTitle}>{t("worker.orderCart")}</Text>
//               <View style={styles.cartItemCount}>
//                 <Text style={styles.cartItemCountText}>
//                   {getCartItemCount()} {t("worker.items")}
//                 </Text>
//               </View>
//             </View>

//             <View style={styles.cartContainer}>
//               {cart.map((item) => (
//                 <View key={item.id} style={styles.cartItem}>
//                   <View style={styles.cartItemRow}>
//                     <View style={styles.cartItemDetails}>
//                       <Text style={styles.cartItemName}>
//                         {getTranslatedProductName(item.name)}
//                       </Text>
//                       <Text style={styles.cartItemPrice}>
//                         ${item.price.toFixed(2)} {t("worker.each")}
//                       </Text>
//                     </View>
//                     <View style={styles.cartItemActions}>
//                       <TouchableOpacity
//                         onPress={() => updateQuantity(item.id, item.quantity - 1)}
//                         style={styles.qtyButton}
//                       >
//                         {renderIcon("Minus", 16, "#4e342e")}
//                       </TouchableOpacity>
//                       <Text style={styles.cartItemQty}>{item.quantity}</Text>
//                       <TouchableOpacity
//                         onPress={() => updateQuantity(item.id, item.quantity + 1)}
//                         style={[styles.qtyButton, styles.qtyPlusButton]}
//                       >
//                         {renderIcon("Plus", 16, "#fff")}
//                       </TouchableOpacity>
//                       <TouchableOpacity
//                         onPress={() => removeFromCart(item.id)}
//                         style={styles.removeButton}
//                       >
//                         {renderIcon("X", 16, "#fff")}
//                       </TouchableOpacity>
//                     </View>
//                   </View>
//                   <View style={styles.cartItemTotalContainer}>
//                     <Text style={styles.cartItemTotal}>
//                       ${(item.price * item.quantity).toFixed(2)}
//                     </Text>
//                   </View>
//                 </View>
//               ))}

//               <View style={styles.cartTotalSection}>
//                 <View style={styles.cartTotalRow}>
//                   <Text style={styles.cartTotalLabel}>
//                     {t("worker.totalAmount")}
//                   </Text>
//                   <Text style={styles.cartTotalAmount}>
//                     ${getTotal().toFixed(2)}
//                   </Text>
//                 </View>
//                 <TouchableOpacity style={styles.placeOrderButton} onPress={placeOrder}>
//                   <View style={styles.placeOrderButtonContent}>
//                     {renderIcon("Send", 20, "#fff")}
//                     <Text style={styles.placeOrderButtonText}>
//                       {t("worker.placeOrder")}
//                     </Text>
//                   </View>
//                 </TouchableOpacity>
//               </View>
//             </View>
//           </View>
//         )}
//       </ScrollView>
//     </View>
//   );
// };

// export default NewOrderScreen;

// _____________________________________________________________________________________________
